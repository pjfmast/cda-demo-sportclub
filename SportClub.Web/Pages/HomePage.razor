@page "/"
@inject HttpClient Http
@inject NavigationManager NavManager

<PageTitle>All BRESS sports</PageTitle>

@if (_sports == null)
{
    <h3>Loading all sports...</h3>
}

else
{
    <WorkoutDetails Workout="_selectedWorkout" />

    <button class="btn btn-outline-primary" @onclick="ShowTodaysSchedule">Todays Schedule</button>
    <WorkoutSearch />
    <button class="btn btn-outline-primary" @onclick="AddWorkout">Add</button>

    @if (_sports.Any())
    {
        <ViewSwitcher Items="_sports" TItem="WorkoutDto" Context="sport">
            <GridTemplate>
                <WorkoutCard Workout="sport" OnSelected="HandleWorkoutSelected" />
            </GridTemplate>

            <HeaderTemplate>
                <th>Title</th>
                <th>Category</th>
                <th>Duration</th>
                <th>Price</th>
                <th></th>
            </HeaderTemplate>
            <RowTemplate>
                <th scope="col">@sport.Title</th>
                <td>@sport.Category</td>
                <td>@(sport.Duration) minuten</td>
                <td>@((sport.Price)?.ToString("C")) </td>
            </RowTemplate>
        </ViewSwitcher>
    }
    else
    {
        <div class="no-workouts">
            <svg viewBox="0 0 16 16" class="bi bi-tree" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" d="M8 0a.5.5 0 0 1 .416.223l3 4.5A.5.5 0 0 1 11 5.5h-.098l2.022 3.235a.5.5 0 0 1-.424.765h-.191l1.638 3.276a.5.5 0 0 1-.447.724h-11a.5.5 0 0 1-.447-.724L3.69 9.5H3.5a.5.5 0 0 1-.424-.765L5.098 5.5H5a.5.5 0 0 1-.416-.777l3-4.5A.5.5 0 0 1 8 0zM5.934 4.5H6a.5.5 0 0 1 .424.765L4.402 8.5H4.5a.5.5 0 0 1 .447.724L3.31 12.5h9.382l-1.638-3.276A.5.5 0 0 1 11.5 8.5h.098L9.576 5.265A.5.5 0 0 1 10 4.5h.066L8 1.401 5.934 4.5z" />
                <path d="M7 13.5h2V16H7v-2.5z" />
            </svg>
            <h3 class="text-muted font-weight-light">There are no workouts yet, <a href="add-workout">why not add one?</a></h3>
        </div>
    }
}


@code {
    private WorkoutDto? _selectedWorkout;

    /* Required members must be at least as visible as their containing type.
     * For example, a public class can't contain a required field that's protected. */
    public required IEnumerable<WorkoutDto> _sports = Enumerable.Empty<WorkoutDto>();

    protected override async Task OnInitializedAsync()
    {
        // Onnodig bij eenvoudige view-logica om een Service-class te maken:
        try
        {
            var result = await Http.GetFromJsonAsync<IEnumerable<WorkoutDto>>("api/Schedule/GetWorkouts");
            _sports = result ?? Enumerable.Empty<WorkoutDto>();
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"There was a problem loading workout data: {ex.Message}");
        }

    }

    private void HandleWorkoutSelected(WorkoutDto workout)
        => _selectedWorkout = workout;

    private void ShowTodaysSchedule()
    => NavManager.NavigateTo($"/schedule/today");

    private void AddWorkout()
    => NavManager.NavigateTo($"add-workout");
}
